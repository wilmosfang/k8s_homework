apiVersion: {{ .Values.apiVersion }}
kind: DaemonSet
metadata:
  name: {{ .Values.image.rng }}
  namespace: {{ .Values.namespaces }}
  labels:
    servicename: {{ .Values.image.rng }}
{{ include "dockercoins.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      servicename: {{ .Values.image.rng }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        servicename: {{ .Values.image.rng }}
{{ include "dockercoins.labels" . | indent 8 }}
    spec:
      containers:
        - name: {{ .Values.image.rng }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.rng }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: SERVICE_NAME
            value: {{ .Values.image.rng }}
{{ include "dockercoins.env" . | indent 10 }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
